webpackJsonp([4],{W3tN:function(n,o){n.exports='\x3c!-- <canvas id="canvasId" width="800" height="600"></canvas> --\x3e\n<div id="container"></div>\n<script type="x-shader/x-vertex" id="vertexshader">\n\n    attribute float size;\n    attribute vec3 position2;\n    // attribute vec3 color;\n    uniform float val;\n    // varying vec3 vColor;\n    varying vec3 vPos;\n\n    void main() {\n\n        // vColor = color;\n        vPos.x = position.x * val + position2.x * (1.-val);\n        vPos.y = position.y* val + position2.y * (1.-val);\n        vPos.z = position.z* val + position2.z * (1.-val);\n\n        vec4 mvPosition = modelViewMatrix * vec4( vPos, 1.0 );\n\n        gl_PointSize = size * ( 300.0 / -mvPosition.z );\n\n        gl_Position = projectionMatrix * mvPosition;\n\n    }\n\n<\/script>\n<script type="x-shader/x-fragment" id="fragmentshader">\n    uniform vec3 color;\n    uniform sampler2D texture;\n\n    // varying vec3 vColor;\n    varying vec3 vPos;\n\n    void main() {\n\n        vec3 vColor = vec3(1.0, 0., 0.);\n        vColor.r = vPos.z/50.;\n        vColor.g = vPos.y/50.;\n        vColor.b = vPos.x/50.;\n\n        gl_FragColor = vec4( color * vColor, 1.0 );\n\n        gl_FragColor = gl_FragColor * texture2D( texture, gl_PointCoord );\n\n    }\n<\/script>'}});